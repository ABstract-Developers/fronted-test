import Head from "next/head";
import { useState } from "react";
import {
  Container,
  Stack,
  Button,
  SimpleGrid,
  Flex,
  Box,
  Modal,
  ModalOverlay,
  ModalHeader,
  ModalBody,
  ModalContent,
  ModalCloseButton,
  useDisclosure,
  Text,
  GridItem,
  Grid,
} from "@chakra-ui/react";
import PokemonCard from "@/components/PokemonCard";
import PokemonData from "@/components/PokemonData";
import { usePokemonContext } from "@/components/ContextProvider";
import { Pagination } from "@/components/Pagination";
import Catched from "@/components/Catched";

export default function Home() {
  const pokemonDataModal = useDisclosure();
  const { setIsModalOff, count, pokemon, params } = usePokemonContext();
  const [selectedPokemon, setSelectedPokemon] = useState();
  setIsModalOff(true);

  function handleViewPokemon(pokemon) {
    setSelectedPokemon(pokemon);
    pokemonDataModal.onOpen();
  }

  return (
    <>
      <Head>
        <title>Pokemon Challenge</title>
        <meta name="description" content="Generated by create next app" />
        <meta name="viewport" content="width=device-width, initial-scale=1" />
        <link rel="icon" href="/favicon.ico" />
      </Head>
      <Flex alignItems="center" minH="100vh" justifyContent="center">
        <Container maxW="container.lg">
          <Stack p="5" alignItems="center" spacing="5">
            <Text fontSize={{ base: "lg", md: "2xl" }}>
              Bienvenido al mundo Pok√©mon!!
            </Text>
            <Catched />
            <SimpleGrid
              spacing="5"
              columns={{ base: 1, sm: 2, md: 3, lg: 4, xl: 5 }}
            >
              {pokemon.map((poke) => (
                <Box
                  as="button"
                  key={poke.id}
                  onClick={() => handleViewPokemon(poke)}
                >
                  <PokemonCard pokemon={poke} />
                </Box>
              ))}
            </SimpleGrid>
            <Pagination numOfPages={Math.ceil(count / params.chunk)} />
          </Stack>
        </Container>
      </Flex>
      <Modal {...pokemonDataModal}>
        <ModalOverlay />
        <ModalContent>
          <ModalHeader textTransform="capitalize">
            {selectedPokemon?.name}
          </ModalHeader>
          <ModalCloseButton />
          <ModalBody>
            {selectedPokemon && <PokemonData pokemon={selectedPokemon} />}
          </ModalBody>
        </ModalContent>
      </Modal>
    </>
  );
}
